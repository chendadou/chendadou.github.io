<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于 Javascript 的 this 和闭包</title>
    <url>/2017/05/20/js001/</url>
    <content><![CDATA[<ul>
<li>this 是 Javascript 中的一个关键字；</li>
<li>对闭包的理解：<ul>
<li>能够读取其他函数内部变量的函数；</li>
<li>定义在一个函数内部的函数；</li>
<li>本质上来说，闭包就是将函数内部和函数外部连接起来的一座桥梁。</li>
</ul>
</li>
</ul>
<span id="more"></span>

<h3 id="关于-this"><a href="#关于-this" class="headerlink" title="关于 this"></a>关于 this</h3><h4 id="纯粹的函数调用"><a href="#纯粹的函数调用" class="headerlink" title="纯粹的函数调用"></a>纯粹的函数调用</h4>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">x</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">test</span>();     <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局调用，故 this 指向全局对象。</span></span><br></pre></td></tr></table></figure>

<h4 id="作为对象方法的调用"><a href="#作为对象方法的调用" class="headerlink" title="作为对象方法的调用"></a>作为对象方法的调用</h4>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">x</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">obj.<span class="property">x</span> = <span class="number">1</span>;</span><br><span class="line">obj.<span class="property">m</span> = test;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">m</span>();     <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 作为 obj 对象方法的调用，故 this 指向 obj 对象，即上级对象。</span></span><br></pre></td></tr></table></figure>

<h4 id="作为构造函数的调用"><a href="#作为构造函数的调用" class="headerlink" title="作为构造函数的调用"></a>作为构造函数的调用</h4>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">x</span> = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title function_">test</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">x</span>);    <span class="comment">// 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);        <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  1. 构造函数：通过这个函数（test），可以生成一个新对象（obj）；</span></span><br><span class="line"><span class="comment">  2. 这边的 this 指向这个新对象。</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure>

<h4 id="apply-x2F-call"><a href="#apply-x2F-call" class="headerlink" title="apply() &#x2F; call()"></a>apply() &#x2F; call()</h4>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">x</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">obj.<span class="property">x</span> = <span class="number">1</span>;</span><br><span class="line">obj.<span class="property">m</span> = test;</span><br><span class="line"></span><br><span class="line">obj.<span class="property">m</span>.<span class="title function_">apply</span>();        <span class="comment">// 0</span></span><br><span class="line">obj.<span class="property">m</span>.<span class="title function_">apply</span>(obj);     <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  apply(): </span></span><br><span class="line"><span class="comment">    1. 是函数的一个方法，作用为改变函数的调用对象；</span></span><br><span class="line"><span class="comment">    2. 第一个参数就表示改变后的调用这个函数的对象，这边 this 就是第一个参数；</span></span><br><span class="line"><span class="comment">    3. 当第一个参数为空时，默认调用全局对象。</span></span><br><span class="line"><span class="comment">  call() 同理。</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure>

<h4 id="箭头函数中的-this"><a href="#箭头函数中的-this" class="headerlink" title="箭头函数中的 this"></a>箭头函数中的 this</h4>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);      <span class="comment">// 指向 window 对象</span></span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">b</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);      <span class="comment">// 指向 obj 对象</span></span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.<span class="title function_">a</span>();</span><br><span class="line">obj.<span class="title function_">b</span>();</span><br><span class="line"><span class="comment">// 箭头函数中的 this 指向 定义时 所在的对象。</span></span><br></pre></td></tr></table></figure>

<h3 id="关于闭包"><a href="#关于闭包" class="headerlink" title="关于闭包"></a>关于闭包</h3><h4 id="闭包用途"><a href="#闭包用途" class="headerlink" title="闭包用途"></a>闭包用途</h4><ul>
<li>可以读取函数内部的变量；</li>
<li>让变量的值始终保持在内存中。</li>
</ul>
<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> n = <span class="number">999</span>;</span><br><span class="line">  nAdd = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    n += <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(n);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> f2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = <span class="title function_">f1</span>();</span><br><span class="line"><span class="title function_">result</span>();       <span class="comment">// 999</span></span><br><span class="line"><span class="title function_">nAdd</span>();</span><br><span class="line"><span class="title function_">result</span>();       <span class="comment">// 1000</span></span><br></pre></td></tr></table></figure>

<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul>
<li>不能滥用闭包，否则易导致网页出现性能问题，可能导致内存泄漏等。解决方法为：在退出函数之前，将不使用的局部变量全部删除。</li>
<li>闭包会在父函数外部改变父函数内部变量的值。</li>
</ul>
<h3 id="最后要说"><a href="#最后要说" class="headerlink" title="最后要说"></a>最后要说</h3><h4 id="代码片段一"><a href="#代码片段一" class="headerlink" title="代码片段一"></a>代码片段一</h4>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;The Window&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> object = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;My Object&quot;</span>,</span><br><span class="line">  <span class="attr">getNameFunc</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(object.<span class="title function_">getNameFunc</span>()());      <span class="comment">// The Window</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  object.getnameFunc() 返回的匿名闭包函数被全局变量所引用，其中的this指向</span></span><br><span class="line"><span class="comment">  全局变量，当执行时打印 The Window。</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure>

<h4 id="代码片段二"><a href="#代码片段二" class="headerlink" title="代码片段二"></a>代码片段二</h4>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;The Window&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> object = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;My Object&quot;</span>,</span><br><span class="line">  <span class="attr">getNameFunc</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> that.<span class="property">name</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(object.<span class="title function_">getNameFunc</span>()());      <span class="comment">// My Object</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  object.getnameFunc() 在返回闭包函数前，将 this 赋给 that，此时 getnameFunc 是由</span></span><br><span class="line"><span class="comment">  object 调用的，故而 this 指向 object，当内部函数被返回时，由于闭包的特性，仍然</span></span><br><span class="line"><span class="comment">  能访问到外部函数中的值，当执行打印 My Object 。</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考：<br><a href="http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html">http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html</a><br><a href="http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html">http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 Hexo 搜索功能</title>
    <url>/2017/06/02/hexo001/</url>
    <content><![CDATA[<h3 id="设置步骤"><a href="#设置步骤" class="headerlink" title="设置步骤"></a>设置步骤</h3><ol>
<li>下载 hexo-generator-searchdb 插件  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li>
</ol>
<span id="more"></span>

<ol start="2">
<li><p>修改站点配置<br>  your_blog&#x2F;.config.yml</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改主题配置<br>  your_blog&#x2F;themes&#x2F;your_theme&#x2F;.config.yml</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 找到 local_search，将 enable 的值设置为 true</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="出现的问题及解决方式"><a href="#出现的问题及解决方式" class="headerlink" title="出现的问题及解决方式"></a>出现的问题及解决方式</h3><h4 id="搜索功能无效"><a href="#搜索功能无效" class="headerlink" title="搜索功能无效"></a>搜索功能无效</h4><ul>
<li><p>原因1: 搜索插件配置问题<br>按照以上所示设置步骤设置一下即可。</p>
</li>
<li><p>原因2: md 文档含有特殊字符</p>
<ul>
<li>界面显示：点击搜索后，只出现 loading 状态，搜索无法加载出来。</li>
<li>调试：地址栏输入 <code>http://localhost:4000/search.xml</code><br>页面输出以下内容：<br>  <img src="/assets/img/hexo01.jpg" alt="页面显示错误信息"><br>查看 network，请求正常且返回了 200：<br>注：也有返回 304 的情况，我这边是返回了 200。<br>  <img src="/assets/img/hexo02.jpg" alt="network"></li>
<li>解决方式：<br>全局使用正则表达式搜索 \x08 或者 \u0008，搜索到到内容替换成空格。<br>注：也可能是其他的特殊字符，搜索替换为空就行。</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>notes</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 HTTP 基础</title>
    <url>/2018/06/19/http/</url>
    <content><![CDATA[<h2 id="HTTP-的三次握手"><a href="#HTTP-的三次握手" class="headerlink" title="HTTP 的三次握手"></a>HTTP 的三次握手</h2><h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><p>创建一个TCP连接的过程。</p>
<span id="more"></span>

<p><img src="/assets/img/http01.png" alt="HTTP的三次握手"></p>
<h3 id="为什么要进行三次握手？"><a href="#为什么要进行三次握手？" class="headerlink" title="为什么要进行三次握手？"></a>为什么要进行三次握手？</h3><p>为了规避因网络传输延时而导致的一些服务器开销的问题。</p>
<h2 id="URI、URL、URN"><a href="#URI、URL、URN" class="headerlink" title="URI、URL、URN"></a>URI、URL、URN</h2><h3 id="URI"><a href="#URI" class="headerlink" title="URI"></a>URI</h3><p>统一资源标志符（Uniform Resource Identifier）。<br>用来标识互联网上的唯一资源，包括URL和URN。</p>
<h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><p>统一资源定位器（Uniform Resource Locator）。<br>用来找到资源所在的位置并进行寻找和访问。</p>
<p><code>protocol://user:pass@host.com:port/path?query=string#hash</code></p>
<h3 id="URN"><a href="#URN" class="headerlink" title="URN"></a>URN</h3><p>永久统一资源定位符。<br>在资源移动之后还能被找到。</p>
<h2 id="HTTP报文"><a href="#HTTP报文" class="headerlink" title="HTTP报文"></a>HTTP报文</h2><p><img src="/assets/img/http02.png" alt="HTTP报文">  </p>
<h3 id="HTTP方法"><a href="#HTTP方法" class="headerlink" title="HTTP方法"></a>HTTP方法</h3><p>用来定义对于资源的操作。<br>常用的有GET、POST等。<br>从定义上讲有各自的语义。</p>
<h3 id="HTTP-CODE"><a href="#HTTP-CODE" class="headerlink" title="HTTP CODE"></a>HTTP CODE</h3><p>定义服务器对请求的处理结果。<br>各个区间的CODE有各自的语义。<br>好的HTTP服务可以通过CODE判断结果。</p>
<h3 id="HTTP-Header"><a href="#HTTP-Header" class="headerlink" title="HTTP Header"></a>HTTP Header</h3><p><img src="/assets/img/http03.png" alt="缓存如何进行"> </p>
<ol>
<li>缓存头 Cache-Control<ul>
<li>max-age；</li>
<li>no-cache 经过服务器端缓存验证是否可以使用缓存；</li>
<li>no-store 不考虑缓存。</li>
</ul>
</li>
<li>缓存验证 Last-Modified 和 Etag<ul>
<li>Last-Modified 上次修改时间，配合 If-Modified-Since 使用；</li>
<li>Etag 数据签名，配合 If-Match 和 If-None-Match 使用。</li>
</ul>
</li>
<li>cookie <ul>
<li>含义：<ul>
<li>通过 Set-Cookie 这个 HTTP Header 设置的保存在浏览器中的内容；</li>
<li>下次请求会自动带上；</li>
<li>键值对，并且可设置多个。</li>
</ul>
</li>
<li>属性：<ul>
<li>max-age（s） 和 expires；</li>
<li>Secure （https）；</li>
<li>HttpOnly，无法通过 document.cookie 访问（考虑到安全性）；</li>
<li>domain。</li>
</ul>
</li>
</ul>
</li>
<li>Connection<ul>
<li>Keep-Alive 保持长链接；<br>  Chrome 最多允许6个并发请求。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>Collections</title>
    <url>/2018/07/13/collections/</url>
    <content><![CDATA[<ol>
<li><p><a href="http://www.bootcdn.cn/">http://www.bootcdn.cn/</a><br> 前端开源项目 CDN 加速服务</p>
</li>
<li><p><a href="https://github.com/ProtoTeam/blog/blob/master/201805/3.md">https://github.com/ProtoTeam/blog/blob/master/201805/3.md</a><br> 如何阅读大型前端开源项目的源码</p>
</li>
</ol>
<span id="more"></span>

<ol start="3">
<li><p><a href="https://www.npmjs.com/">https://www.npmjs.com/</a><br> npm is the package manager for JavaScript and the world’s largest software registry</p>
</li>
<li><p><a href="http://sangka-z.com/react-in-patterns-cn/">http://sangka-z.com/react-in-patterns-cn/</a><br> React 模式</p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2016/06/css_modules.html">http://www.ruanyifeng.com/blog/2016/06/css_modules.html</a><br> CSS Modules 用法教程</p>
</li>
<li><p><a href="https://caniuse.com/">https://caniuse.com/</a><br> 前端兼容性自查工具</p>
</li>
<li><p><a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a><br> Vue.js</p>
</li>
<li><p><a href="https://reactjs.org/">https://reactjs.org/</a><br> React.js</p>
</li>
<li><p><a href="https://www.webpackjs.com/">https://www.webpackjs.com/</a><br> Webpack，静态模块打包器</p>
</li>
<li><p><a href="https://jsonlint.com/">https://jsonlint.com/</a><br>JSON 校验与转换</p>
</li>
<li><p><a href="http://nodejs.cn/">http://nodejs.cn/</a><br>Node.js</p>
</li>
<li><p><a href="http://www.expressjs.com.cn/">http://www.expressjs.com.cn/</a><br>Express，基于 Node.js 平台的 web 开发框架</p>
</li>
<li><p><a href="https://yarn.bootcss.com/">https://yarn.bootcss.com/</a><br>Yarn，依赖管理工具</p>
</li>
<li><p><a href="https://koa.bootcss.com/">https://koa.bootcss.com/</a><br>Koa，基于 Node.js 平台的下一代 web 开发框架</p>
</li>
<li><p><a href="https://www.babeljs.cn/">https://www.babeljs.cn/</a><br>Babel，Javascript 编译器</p>
</li>
<li><p><a href="https://react-guide.github.io/react-router-cn/">https://react-guide.github.io/react-router-cn/</a><br>React Router 中文文档</p>
</li>
<li><p><a href="https://www.redux.org.cn/">https://www.redux.org.cn/</a><br>React Redux 中文文档</p>
</li>
<li><p><a href="https://reactnative.cn/">https://reactnative.cn/</a><br>React Native</p>
</li>
<li><p><a href="https://www.tslang.cn/">https://www.tslang.cn/</a><br>Typescript</p>
</li>
<li><p><a href="https://vuex.vuejs.org/">https://vuex.vuejs.org/</a><br>Vuex</p>
</li>
<li><p><a href="https://pro.ant.design/index-cn">https://pro.ant.design/index-cn</a><br>ant-design-pro, 开箱即用的中台前端&#x2F;设计解决方案</p>
</li>
<li><p><a href="https://panjiachen.github.io/vue-element-admin-site/zh/">https://panjiachen.github.io/vue-element-admin-site/zh/</a><br>vue-element-admin</p>
</li>
<li><p><a href="https://wangdoc.com/ssh/index.html">https://wangdoc.com/ssh/index.html</a><br>SSH 教程</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>notes</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS and CSRF</title>
    <url>/2018/08/18/xssandcsrf/</url>
    <content><![CDATA[<h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><p>XSS（Cross Site Scripting），跨站脚本攻击。</p>
<h2 id="反射型-XSS"><a href="#反射型-XSS" class="headerlink" title="反射型 XSS"></a>反射型 XSS</h2><p>诱导用户自己点开链接（一次性）。</p>
<span id="more"></span>

<p>eg. 用户登录成功后，当在链接中注入脚本时，即</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// http://www.xxx.com?content=&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>chrome 发现路径异常，会有 xss 屏蔽功能；</li>
<li>firefox 则会运行 alert(document.cookie)，若服务端将 SESSION_ID 这样的身份认证字段存在 cookie 内，则用户会有信息暴露的危险；</li>
<li>解决方式如下：<ul>
<li>一般情况下让 cookie 在前端无法获取，即服务端存入 cookie 时设置 httpOnly: true。该方式仅降低受损范围，不推荐；</li>
<li>查询参数时，加上 encodeURIComponent(query.content) 来解决。</li>
</ul>
</li>
</ul>
<h2 id="DOM-Based"><a href="#DOM-Based" class="headerlink" title="DOM-Based"></a>DOM-Based</h2><ul>
<li>不基于后端：修改属性，插入内容，document.write…</li>
<li>该攻击只改变当前客户端的页面结构；</li>
<li>攻击的内容：xss payload；</li>
<li>解决方式：转义输入的内容，encodeURI()。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * eg. 输入url，获取输入内容并显示图片</span></span><br><span class="line"><span class="comment"> * 攻击有以下两种情况</span></span><br><span class="line"><span class="comment"> * &lt;img src=&quot;xxx&quot; onerror=&quot;alert(1)&quot; /&gt;</span></span><br><span class="line"><span class="comment"> * &lt;img src=&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot; /&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;#add&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;.box&#x27;</span>).<span class="title function_">html</span>(<span class="string">`&lt;img src=&quot;<span class="subst">$&#123;<span class="built_in">encodeURI</span>($(<span class="string">&#x27;#web&#x27;</span>).val())&#125;</span>&quot; /&gt;`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="存储型-XSS"><a href="#存储型-XSS" class="headerlink" title="存储型 XSS"></a>存储型 XSS</h2><p>恶意的脚本存储到了服务器上，所有人访问时都会受到攻击，比以上两种攻击方式受到的攻击范围更大。<br>eg. 个人登录后在评论区发表评论，评论内容为恶意脚本。</p>
<ul>
<li>解决方式如下：<ul>
<li>客户端传递给服务器时，需要校验过滤；</li>
<li>服务端再做一次过滤；</li>
<li>直接在输出的时候过滤。</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 过滤</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encodeHtml</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&#x27;&amp;amp;&#x27;</span>).</span><br><span class="line">            <span class="title function_">replace</span>(<span class="regexp">/\&quot;/g</span>, <span class="string">&#x27;&amp;quot;&#x27;</span>).</span><br><span class="line">            <span class="title function_">replace</span>(<span class="regexp">/\&#x27;/g</span>, <span class="string">&#x27;$apos;&#x27;</span>).</span><br><span class="line">            <span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&#x27;&amp;lt;&#x27;</span>).</span><br><span class="line">            <span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&#x27;&amp;gt;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><p>CSRF（Cross-site request forgery），跨站请求伪造。<br>eg. 如下图所示<br><img src="/assets/img/csrf.png" alt="csrf 例子示意图"></p>
<ul>
<li><p>图例几点说明：</p>
<ul>
<li>form 表单提交是没有跨域问题的；</li>
<li>第三方网站拿不到用户 cookie，当往 4000 端口提交内容时会自动提交 cookie。</li>
</ul>
</li>
<li><p>解决方法如下：</p>
<ul>
<li>添加验证码（体验不好）</li>
<li>判断来源，请求头Referer（不靠谱，可通过 node 自己发请求来实现伪造）</li>
<li>token （推荐）</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Work</title>
    <url>/2018/10/16/work/</url>
    <content><![CDATA[<h2 id="关于工作的一些记录"><a href="#关于工作的一些记录" class="headerlink" title="关于工作的一些记录"></a>关于工作的一些记录</h2><h3 id="2018-10-16"><a href="#2018-10-16" class="headerlink" title="2018.10.16"></a>2018.10.16</h3><ol>
<li><p>react v16.5.2 生命周期<br>  关于 <code>static getDerivedStateFromProps()</code></p>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="title function_">getDerivedStateFromProps</span>(nextProps, prevState)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1. 调用：组件实例化后和接收新属性时将会调用；</span></span><br><span class="line"><span class="comment">* 2. 返回一个对象来更新状态，返回 null 表明新属性不需要更新状态；</span></span><br><span class="line"><span class="comment">* 3. 调用 this.setState() 通常不会调用该方法。</span></span><br><span class="line"><span class="comment">* 注意：父组件导致组件的渲染，即使属性没有更新，该方法也会被调用。</span></span><br><span class="line"><span class="comment">* 该方法替换了以往使用的 componentWillReceiveProps(nextProps) 方法。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li>
</ol>
<span id="more"></span>

<ol start="2">
<li><p>antd v3.8.4<br>  Modal 对话框</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Modal</span> <span class="attr">destroyOnClose</span>=<span class="string">&#123;true&#125;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>content<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Modal</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- destroyOnClose 参数，关闭时销毁 Modal 里的子元素，默认值为 false  --&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>echarts<br>  线形图的 <code>tooltip</code> 中 <code>formatter</code> 属性自定义</p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tooltip1 = &#123;</span><br><span class="line">  <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">  <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a&#125;&lt;br&gt;&#123;b&#125;&lt;br&gt;&#123;c&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> tooltip2 = &#123;</span><br><span class="line">  <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">  <span class="attr">formatter</span>: <span class="keyword">function</span>(<span class="params">params</span>)&#123;</span><br><span class="line">      <span class="keyword">var</span> str = params[<span class="number">0</span>].<span class="property">axisValueLabel</span> + <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;params.<span class="property">length</span>; i++)&#123;</span><br><span class="line">          str+=params[i].<span class="property">marker</span> + params[i].<span class="property">value</span> + <span class="string">&#x27; 自定义文字&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> str;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 1. trigger: axis（坐标轴触发），item（数据项图形）；</span></span><br><span class="line"><span class="comment">* 2. formatter 自定义：</span></span><br><span class="line"><span class="comment">*  (1) 字符串，缺点是没有了原有的对应的标识（marker）；</span></span><br><span class="line"><span class="comment">*  (2) 回调函数：有效解决了字符串存在的问题。  </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="2018-10-17"><a href="#2018-10-17" class="headerlink" title="2018.10.17"></a>2018.10.17</h3><p>socket.io-client</p>
<ol>
<li>问题：在某个组件内的 <code>componentDidMount()</code> 方法中使用，卸载时没有进行监听事件的移除，导致一直在监听事件。</li>
<li>解决方式：期望只在该组件中监听事件，当组件移除时取消通讯。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">Demo</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">socketObj</span> = <span class="title function_">io</span>(<span class="string">&#x27;http://www.xxx.com/socket&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  componentDidMount = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">socketObj</span>.<span class="title function_">emit</span>(<span class="string">&#x27;getData&#x27;</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">socketObj</span>.<span class="title function_">on</span>(<span class="string">&#x27;getData&#x27;</span>, <span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;getData&#x27;</span>, e);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  componentWillUnmount = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 移除监听事件</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">socketObj</span>.<span class="title function_">removeListener</span>(<span class="string">&#x27;getData&#x27;</span>);</span><br><span class="line">    <span class="comment">// this.socketObj.close()，关闭连接。</span></span><br><span class="line">    <span class="comment">// 但之后再次进入该组件时，每一次挂载操作会增加新的监听事件，导致事件数量一直增加。所以选择移除事件。</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="2018-10-18"><a href="#2018-10-18" class="headerlink" title="2018.10.18"></a>2018.10.18</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> json1 = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>, <span class="attr">c</span>: <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> json2 = &#123; <span class="attr">a</span>: <span class="number">2</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> json3 = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, json1, json2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(json3);  <span class="comment">// &#123; a: 2, b: 2, c: 3 &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价于以下的代码</span></span><br><span class="line"><span class="keyword">let</span> json4 = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>, <span class="attr">c</span>: <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> json5 = &#123; <span class="attr">a</span>: <span class="number">2</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> json6 = &#123;...json4, ...json5&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(json6);  <span class="comment">// &#123; a: 2, b: 2, c: 3 &#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="2018-12-28"><a href="#2018-12-28" class="headerlink" title="2018.12.28"></a>2018.12.28</h3><p><code>input</code> 缓存问题（自动填充）</p>
<ul>
<li>问题：<code>input</code> 输入框会自动填充已存入浏览器的表单数据，主要表现在密码输入框。</li>
<li>解决方式：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1. type = &#x27;text&#x27; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">autocomplete</span>=<span class="string">&#x27;off&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;text&#x27;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2. type = &#x27;password&#x27; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;password&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;display: none;&#x27;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;password&#x27;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 或者 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;password&#x27;</span> <span class="attr">aotocomplete</span>=<span class="string">&#x27;new-password&#x27;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 附注：autocomplete=&#x27;off&#x27; 和 autocomplete=&#x27;new-password&#x27; 的 input 属性设置在 firefox 下可能无效。 --&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="2019-02-01"><a href="#2019-02-01" class="headerlink" title="2019.02.01"></a>2019.02.01</h3><p><code>Element.scrollIntoView()</code> 方法<br>官方解释：让当前的元素滚动到浏览器窗口的可视范围内。<br>支持两种参数传入方式：</p>
<ol>
<li><code>element.scrollIntoView(alignToTop:Boolean)</code>;<br>当传入 <code>true</code>，等价于 <code>element.scrollIntoView()</code>;<ul>
<li><code>true</code>: 元素顶端与所在滚动区的可视区域的顶端对齐；</li>
<li><code>false</code>: 元素顶端与所在滚动区的可视区域的底端对齐。</li>
</ul>
</li>
<li><code>element.scrollIntoView(scrollIntoViewOptions: Object)</code>;<br>IE 不支持。<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> element = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;box&#x27;</span>);</span><br><span class="line"></span><br><span class="line">element.<span class="title function_">scrollIntoView</span>();</span><br><span class="line">element.<span class="title function_">scrollIntoView</span>(<span class="literal">false</span>);</span><br><span class="line">element.<span class="title function_">scrollIntoView</span>(&#123;<span class="attr">block</span>: <span class="string">&#x27;end&#x27;</span>&#125;);</span><br><span class="line">element.<span class="title function_">scrollIntoView</span>(&#123;<span class="attr">behavior</span>: <span class="string">&#x27;instant&#x27;</span>, <span class="attr">block</span>: <span class="string">&#x27;end&#x27;</span>, <span class="attr">inline</span>: <span class="string">&#x27;nearest&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   1. behavior: 动画效果，默认值 auto，可选值有 auto, instant, smooth；</span></span><br><span class="line"><span class="comment">   2. block: 默认值 center, 可选值有 start, end, center, nearest；</span></span><br><span class="line"><span class="comment">   3. inline: 默认值 nearest, 可选值与 block 的可选值一致。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <tags>
        <tag>notes</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 Git 常用命令</title>
    <url>/2018/11/04/git/</url>
    <content><![CDATA[<ol>
<li><p>设置用户信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;xxx&quot;</span><br><span class="line">git config --global user.email &quot;xxx@xxx&quot;</span><br><span class="line"></span><br><span class="line">注：有 --global，更改的配置文件位于用户目录下，反之，位于当前项目的 .git/config。</span><br></pre></td></tr></table></figure>
<span id="more"></span>
</li>
<li><p>查看配置信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看所有：</span><br><span class="line">git config --list</span><br><span class="line"></span><br><span class="line">查看某一项：</span><br><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取帮助</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git help</span><br><span class="line">git help config</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新到仓库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看当前文件状态：</span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line">跟踪文件：</span><br><span class="line">单个文件 =&gt; git add [file-name]</span><br><span class="line">所有文件 =&gt; git add .</span><br><span class="line"></span><br><span class="line">------ 暂存状态 ------</span><br><span class="line"></span><br><span class="line">提交更新：</span><br><span class="line">git commit -m &quot;提交说明&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>分支相关</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看本地分支和远程分支：</span><br><span class="line">git branch </span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line">建立本地分支并推送到远程仓库：</span><br><span class="line">git checkout -b [branch-name]</span><br><span class="line">git push [remote-name] [branch-name]</span><br><span class="line"></span><br><span class="line">删除本地分支并推送到远程仓库：</span><br><span class="line">git branch -D [branch-name]:[branch-name]</span><br><span class="line">git push [remote-name] :[branch-name]</span><br><span class="line"></span><br><span class="line">推送本地所有分支/tag 到远程仓库：</span><br><span class="line">git push origin *:*</span><br></pre></td></tr></table></figure>
</li>
<li><p>tag 相关</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看所有标签：</span><br><span class="line">git tag</span><br><span class="line">查看某个特定的标签范围(比如v1.5.5)：</span><br><span class="line">git tag -l &quot;v1.5.5*&quot;</span><br><span class="line"></span><br><span class="line">查看标签详情：</span><br><span class="line">git show [tag-name]</span><br><span class="line"></span><br><span class="line">创建标签：</span><br><span class="line">git tag -a [tag-name] -m [infomation]</span><br><span class="line"></span><br><span class="line">推送标签到远程：</span><br><span class="line">单个 =&gt; git push [remote-name] [tag-name]</span><br><span class="line">多个 =&gt; git push [remote-name] --tags</span><br></pre></td></tr></table></figure>
</li>
<li><p>远程仓库相关</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">远程仓库的名字(remote-name)默认是 origin</span><br><span class="line"></span><br><span class="line">查看当前远程仓库的名字和对应的url</span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line">从远程仓库克隆代码到本地</span><br><span class="line">git clone [url]</span><br><span class="line"></span><br><span class="line">更换远程仓库地址</span><br><span class="line">git remote set-url [remote-name] [url]</span><br><span class="line"></span><br><span class="line">添加远程仓库</span><br><span class="line">git remote add [remote-name] [url]</span><br><span class="line"></span><br><span class="line">从远程仓库抓取数据</span><br><span class="line">git fetch [remote-name]</span><br></pre></td></tr></table></figure>
</li>
<li><p>强制 merge 分支 a 并覆盖分支 b</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git fetch --all</span><br><span class="line">git reset --hard [remote-name]/a</span><br><span class="line">git push [remote-name] b -f</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>防抖与节流</title>
    <url>/2019/04/11/js002/</url>
    <content><![CDATA[<p>关于防抖与节流。</p>
<span id="more"></span>

<h2 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h2><p>所谓防抖，指的是在连续触发事件的情况下，只让 <strong>最后一次</strong> 触发事件执行函数。<br>即在最后一次事件触发后，n 秒后只执行一次函数。<br>如果在 n 秒内事件再次被触发，则重新计算函数执行时间。<br>每次事件触发都会生成一个新的定时器，并清除旧的定时器。</p>
<h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> button = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数防抖（一）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span> (fn, delay) &#123;</span><br><span class="line">  <span class="keyword">let</span> timer;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> _this = <span class="variable language_">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每次执行的时候，把前一个 timer 清除掉</span></span><br><span class="line">    <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">      timer = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      fn.<span class="title function_">apply</span>(_this, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;, delay);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handle</span> () &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 点击按钮，触发防抖，执行 handle</span></span><br><span class="line">button.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="title function_">debounce</span>(handle, <span class="number">1000</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数防抖（二）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce2</span> (fn, delay) &#123;</span><br><span class="line">  <span class="keyword">let</span> timer;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">const</span> _args = <span class="variable language_">arguments</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每次执行的时候，把前一个 timer 清除掉</span></span><br><span class="line">    <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">      timer = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      fn.<span class="title function_">apply</span>(_this, _args);</span><br><span class="line">    &#125;, delay);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<ol>
<li>关于 <code>setTimeout</code> 里面的箭头函数：<br>由于箭头函数里面的 <code>arguments</code> 就是外层函数的 <code>arguments</code>，所以无需在 <code>setTimeout</code> 之前定义 <code>const _args = arguments;</code></li>
<li>关于获取执行函数中 <code>Event e</code>（即获取正确的 <code>arguments</code>）：<br>使用箭头函数获取（见上述代码的函数 <code>debounce</code>）；<br>提前定义 <code>arguments</code>（见上述代码的函数 <code>debounce2</code>）。</li>
</ol>
</blockquote>
<h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><ol>
<li>输入框连续输入的请求次数控制（防止表单多次提交，即表单元素的校验）；</li>
<li>防止多次点击提交按钮（或者可以通过给按钮增加 <code>loading</code> 来防止）；</li>
<li>搜索功能的联想词结果实现（生产环境可用 <code>lodash.debounce</code>）。</li>
</ol>
<h2 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h2><p>节流，指的是在连续触发事件的情况下，在指定时间内只执行一次函数。</p>
<h3 id="节流——Date"><a href="#节流——Date" class="headerlink" title="节流——Date"></a>节流——Date</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 函数节流（时间戳版）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span> (fn, delay) &#123;</span><br><span class="line">  <span class="keyword">let</span> pre = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">if</span> (now - pre &gt; delay) &#123;</span><br><span class="line">      pre = now;</span><br><span class="line">      fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeColor</span> () &#123;</span><br><span class="line">  <span class="keyword">let</span> r = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">255</span>);</span><br><span class="line">  <span class="keyword">let</span> g = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">255</span>);</span><br><span class="line">  <span class="keyword">let</span> b = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">255</span>);</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">`rgb(<span class="subst">$&#123;r&#125;</span>, <span class="subst">$&#123;g&#125;</span>, <span class="subst">$&#123;b&#125;</span>)`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="title function_">throttle</span>(changeColor, <span class="number">2000</span>));</span><br></pre></td></tr></table></figure>
<h3 id="节流——setTimeout"><a href="#节流——setTimeout" class="headerlink" title="节流——setTimeout"></a>节流——setTimeout</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 函数节流（定时器版）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span> (fn, delay) &#123;</span><br><span class="line">  <span class="keyword">let</span> timer;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">let</span> _args = <span class="variable language_">arguments</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      fn.<span class="title function_">apply</span>(_this, _args);</span><br><span class="line">      timer = <span class="literal">null</span>;</span><br><span class="line">    &#125;, delay);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeColor</span> () &#123;</span><br><span class="line">  <span class="keyword">let</span> r = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">255</span>);</span><br><span class="line">  <span class="keyword">let</span> g = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">255</span>);</span><br><span class="line">  <span class="keyword">let</span> b = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">255</span>);</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">`rgb(<span class="subst">$&#123;r&#125;</span>, <span class="subst">$&#123;g&#125;</span>, <span class="subst">$&#123;b&#125;</span>)`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="title function_">throttle</span>(changeColor, <span class="number">2000</span>));</span><br></pre></td></tr></table></figure>

<h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ol>
<li>缩放场景：监控浏览器的 <code>resize</code>；</li>
<li>拖拽场景：固定时间内只执行一次，防止超高频次触发的位置变动；</li>
<li>动画场景：避免短时间内多次触发动画而引起的性能问题。</li>
</ol>
]]></content>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 Vue 生命周期</title>
    <url>/2019/07/26/vue001/</url>
    <content><![CDATA[<p>总共经历了8个阶段，分别为：创建前&#x2F;后、挂载前&#x2F;后、更新前&#x2F;后、销毁前&#x2F;后。</p>
<span id="more"></span>

<h3 id="vue-生命周期图示"><a href="#vue-生命周期图示" class="headerlink" title="vue 生命周期图示"></a>vue 生命周期图示</h3><p><img src="/assets/img/lifecycle.png" alt="vue lifecycle"></p>
<h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// version: 2.x</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;lifecycle&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">beforeCreate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------- 创建前 -------&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$data</span>);       <span class="comment">// undefined</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">message</span>);     <span class="comment">// undefined</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>);         <span class="comment">// undefined</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------- 创建后 -------&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$data</span>);       <span class="comment">// &#123; message: &#x27;lifecycle&#x27; &#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">message</span>);     <span class="comment">// lifecycle</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>);         <span class="comment">// undefined</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">beforeMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------- 挂载前 -------&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$data</span>);        <span class="comment">// &#123; message: &#x27;lifecycle&#x27; &#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">message</span>);      <span class="comment">// lifecycle</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>);          <span class="comment">// &lt;div id=&quot;app&quot;&gt;&#123;&#123; message &#125;&#125;&lt;/div&gt;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------- 挂载后 -------&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$data</span>);        <span class="comment">// &#123; message: &#x27;lifecycle&#x27; &#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">message</span>);      <span class="comment">// lifecycle</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$el</span>);          <span class="comment">// &lt;div id=&quot;app&quot;&gt;lifecycle&lt;/div&gt;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">beforeUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------- 更新前 -------&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">updated</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------- 更新后 -------&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">beforeDestroy</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------- 销毁前 -------&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">destroyed</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------- 销毁后 -------&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="vue-生命周期简述"><a href="#vue-生命周期简述" class="headerlink" title="vue 生命周期简述"></a>vue 生命周期简述</h3><h4 id="beforeCreate"><a href="#beforeCreate" class="headerlink" title="beforeCreate"></a>beforeCreate</h4><p>vue 实例的挂载元素 $el 和数据对象 $data 都为 undefined。</p>
<h4 id="created"><a href="#created" class="headerlink" title="created"></a>created</h4><p>vue 实例的数据对象 $data 有了，但是挂载元素 $el 还没有。</p>
<h4 id="beforeCreate-和-created"><a href="#beforeCreate-和-created" class="headerlink" title="beforeCreate 和 created"></a>beforeCreate 和 created</h4><p>由生命周期图示可见，在 beforeCreate 和 created 之间：</p>
<ol>
<li>判断是否有 el 选项：</li>
</ol>
<ul>
<li>有，就继续编译；</li>
<li>没有，就停止编译，也就意味着停止了生命周期，直到在该 vue 实例上调用 vm.$mount(el)。</li>
<li><code>vm.$mount(el) // el 为挂载的 dom 节点 </code></li>
</ul>
<ol start="2">
<li>template 参数选项的有无：</li>
</ol>
<ul>
<li>有，将其作为模版编译成 render 函数；</li>
<li>无，将外部 HTML 作为模版编译。</li>
</ul>
<ol start="3">
<li>在第 2 条的基础上，作为模版的优先级：render 函数选项 &gt; template 选项 &gt; outer HTML。</li>
</ol>
<h4 id="beforeMount"><a href="#beforeMount" class="headerlink" title="beforeMount"></a>beforeMount</h4><p>vue 实例的挂载元素 $el 和数据对象 $data 都初始化了，data.message 还未替换，挂载之前为虚拟 dom 节点。</p>
<h4 id="mounted"><a href="#mounted" class="headerlink" title="mounted"></a>mounted</h4><p>vue 实例挂载完成，data.message 成功渲染。</p>
<h4 id="beforeUpdate-和-updated"><a href="#beforeUpdate-和-updated" class="headerlink" title="beforeUpdate 和 updated"></a>beforeUpdate 和 updated</h4><p>当 vue 发现 data 改变时，会触发对应组件重新渲染，先后调用 beforeUpdate 和 updated 钩子函数。</p>
<h4 id="beforeDestroy"><a href="#beforeDestroy" class="headerlink" title="beforeDestroy"></a>beforeDestroy</h4><p>vue 实例销毁之前调用，在这一步，实例仍然完全可用。</p>
<h4 id="destroyed"><a href="#destroyed" class="headerlink" title="destroyed"></a>destroyed</h4><p>vue 实例销毁之后调用，说明 vue 实例已移除事件监听以及对 dom 的绑定，所有的子实例也会被销毁。</p>
]]></content>
      <tags>
        <tag>javascript</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 Vuex 基础</title>
    <url>/2019/07/28/vue002/</url>
    <content><![CDATA[<h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h3><ul>
<li>Vuex 是一个专门为 Vue.js 应用程序开的<strong>状态管理模式</strong>；</li>
<li>采用集中式存储管理应用的所有组件状态。</li>
<li>Vuex 组成：<ol>
<li>state: 数据仓库；</li>
<li>getter: 用于获取数据；</li>
<li>mutation: 用于修改数据；</li>
<li>action: 用于提交 mutation。</li>
</ol>
</li>
</ul>
<span id="more"></span>

<h3 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h3><p>应用场景：</p>
<ul>
<li>多个视图依赖同一状态；</li>
<li>来自不同视图的行为需要改变同一状态。</li>
</ul>
<h3 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h3><h4 id="步骤简述"><a href="#步骤简述" class="headerlink" title="步骤简述"></a>步骤简述</h4><ol>
<li><p>安装 Vuex:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install vuex</span><br></pre></td></tr></table></figure><br>或者<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn add vuex</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>创建 Vuex 实例：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: &#123;</span><br><span class="line">    <span class="comment">// some state...</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="comment">// some mutations...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>main.js &#x3D;&gt; 将 Vuex 实例挂载到 vue 对象上</p>
</li>
</ol>
<h4 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h4><p>基于 vue-cli 创建的项目。</p>
<ol>
<li><p>main.js<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置为 false 以阻止 vue 在启动时生成生产提示</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 创建 Vuex 实例</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="title function_">countIncrease</span>(<span class="params">state</span>) &#123;</span><br><span class="line">      state.<span class="property">count</span>++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">      // 传入第二个参数</span></span><br><span class="line"><span class="comment">      countIncrease(state, number) &#123;</span></span><br><span class="line"><span class="comment">        state.count = number</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$store</span> = store</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 将 Vuex 实例挂载到 vue 对象上</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  store,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>)</span><br><span class="line">&#125;).$mount(<span class="string">&quot;#app&quot;</span>)</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>App.vue<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>count: &#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;countIncrease&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">count</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">count</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">countIncrease</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&quot;countIncrease&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          传入第二个参数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          this.$store.commit(&quot;countIncrease&quot;, 33)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        **/</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
</li>
</ol>
<blockquote>
<p>原文出处：<a href="https://www.imooc.com/learn/1157">https://www.imooc.com/learn/1157</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>javascript</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>关于一些小记录</title>
    <url>/2021/04/16/record001/</url>
    <content><![CDATA[<p>平时自己瞎折腾的一些小记录。</p>
<span id="more"></span>

<ol>
<li>mac 终端 nvm install v12.10.0 耗时长且安装失败</li>
</ol>
<ul>
<li>本机未使用该版本的 node，但每次打开终端总是提示 nvm v12.10.0 还未安装（强迫症受不了这种提示，就试着安装，结果每次安装都是失败）。</li>
<li>解决方式：<ul>
<li><code>which node</code> 查找 node 安装目录；</li>
<li>进入该目录，删除 v12.10.0 文件夹（本来该版本也不使用，直接删除也无妨）；</li>
<li>终端不再提示需要安装 v12.10.0 版本的 node。<br>
<br></li>
</ul>
</li>
</ul>
<ol start="2">
<li>关于 git 多账户配置（mac）：</li>
</ol>
<ul>
<li>取消全局账户配置<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看是否有全局账户</span><br><span class="line">git config --global user.name</span><br><span class="line"></span><br><span class="line"># 若有，取消全局账户配置</span><br><span class="line">git config --global --unset user.name</span><br><span class="line">git config --global --unset user.email</span><br></pre></td></tr></table></figure></li>
<li>生成 ssh key<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line"></span><br><span class="line"># 生成 ssh key</span><br><span class="line">ssh-keygen -t RSA -C &quot;username1@xxx.com&quot;</span><br><span class="line"></span><br><span class="line"># 设置新的 key 名，默认是 id_rsa</span><br><span class="line">Enter file in which to save the key (/Users/&#123;username&#125;/.ssh/id_rsa): id_rsa_test</span><br><span class="line"></span><br><span class="line"># 同以上步骤，再生成一个 key 名为 id_rsa_me</span><br></pre></td></tr></table></figure></li>
<li>添加 ssh key<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa_test</span><br><span class="line"></span><br><span class="line"># 查看 ssh-add 列表，看看是否添加成功</span><br><span class="line">ssh-add -l</span><br><span class="line"></span><br><span class="line"># 在 github 上配置 ssh key，复制 id_rsa_test.pub</span><br><span class="line">pbcopy &lt; ~/.ssh/id_rsa_test.pub</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li>修改 config 文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 若没有 config 文件，则新建（在 ~/.ssh/ 目录下）</span><br><span class="line">touch config</span><br><span class="line"></span><br><span class="line"># 编辑 config 文件</span><br><span class="line">vim config</span><br><span class="line"></span><br><span class="line"># config 文件加入以下内容</span><br><span class="line">Host github</span><br><span class="line">HostName github.com</span><br><span class="line">User username1</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_test</span><br><span class="line"></span><br><span class="line">Host gitee</span><br><span class="line">HostName gitee.com</span><br><span class="line">User username2</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_me</span><br></pre></td></tr></table></figure></li>
<li>测试<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@gitee.com</span><br><span class="line"></span><br><span class="line"># 如果连接失败，考虑几个因素：是否开了 vpn，是否远程设置了禁止 ssh </span><br></pre></td></tr></table></figure>
<br>
<br></li>
</ul>
<ol start="3">
<li>关于 hexo 部署时遇到的问题：</li>
</ol>
<ul>
<li>username.github.io 项目的提交记录里，用户名显示的并非是 github 用户名。<br>该项目提交记录的用户名取决于本机的 git 全局账户配置，即<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;username@xxx.com&quot;</span><br></pre></td></tr></table></figure>
该项目提交记录的用户名与管理 hexo 初始化项目的用户名无关。</li>
<li>关于 .deploy_git<br>username.github.io 项目的 git 提交记录，如果直接删除，将会清除之前的 git 提交记录。</li>
</ul>
]]></content>
      <tags>
        <tag>chen</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 更新依赖过程中出现的问题</title>
    <url>/2023/03/22/hexo002/</url>
    <content><![CDATA[<h2 id="问题概述"><a href="#问题概述" class="headerlink" title="问题概述"></a>问题概述</h2><ol>
<li>Hexo 部署时报错；</li>
<li>页面显示异常（该问题出现于 Hexo 部署成功后）；</li>
<li>页面显示异常（该问题出现于点击 NexT 主题的菜单项后）；</li>
<li>搜索功能异常；</li>
<li>NexT 主题的翻页符号显示异常。</li>
</ol>
<span id="more"></span>

<h2 id="Hexo-部署时报错"><a href="#Hexo-部署时报错" class="headerlink" title="Hexo 部署时报错"></a>Hexo 部署时报错</h2><h3 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h3><ol>
<li>将已有的 Hexo 项目代码拉取到本地并安装好项目依赖；<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn install</span><br></pre></td></tr></table></figure></li>
<li>本地启动项目，正常运行；<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
<li>随意修改任意 md 文档后，尝试部署项目，报错。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 部署</span></span><br><span class="line">hexo g -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 报错信息</span></span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError [ERR_INVALID_ARG_TYPE]: The &quot;mode&quot; argument must be of type number. Received an instance of Object</span></span><br><span class="line"><span class="string">    at copyFile (node:fs:2840:10)</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="捋下思路"><a href="#捋下思路" class="headerlink" title="捋下思路"></a>捋下思路</h3><ol>
<li>由报错信息给出的网址（ <a href="https://hexo.io/docs/troubleshooting.html">https://hexo.io/docs/troubleshooting.html</a> ）去寻找可行的解放方案，无果；</li>
<li>由于该项目已经有较长一段时间未进行更新，考虑是否是该项目依赖版本过低的原因；</li>
<li>考虑是否是 Node 版本过高的原因（目前是 v18.14.2）。</li>
</ol>
<p>  综上，从以下两方面着手：</p>
<blockquote>
<p>其一，更新项目依赖；<br>其二，降低 Node 版本。<br>注：如果其一就能解决问题，那么就不用进行其二了。</p>
</blockquote>
<h3 id="更新项目依赖"><a href="#更新项目依赖" class="headerlink" title="更新项目依赖"></a>更新项目依赖</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><ol>
<li>直接更新全部依赖；<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn upgrade-interactive --latest</span><br><span class="line"><span class="comment"># 选择某个依赖安装：手动选择需要升级的依赖包，按空格选择，按回车确认；</span></span><br><span class="line"><span class="comment"># 选择所有依赖安装：按 a 键全选，按回车确认。</span></span><br></pre></td></tr></table></figure></li>
<li>清除缓存文件 (db.json) 和已生成的静态文件 (public)<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo c</span><br></pre></td></tr></table></figure></li>
<li>尝试在本地启动项目，以及部署，无报错信息了，但是页面显示异常。<br>打开控制台也没查看到任何直观的报错信息。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><br><img src="/../assets/img/hexo03.png" alt="页面显示异常"></li>
</ol>
<h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><ol>
<li>新建一个 Hexo 项目 hexo-demo（为了获取目前最新的项目依赖版本）；<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> hexo-demo</span><br><span class="line"><span class="built_in">cd</span> hexo-demo</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure></li>
<li>将 <code>hexo-demo/package.json</code> 的 <code>dependencies</code> 复制粘贴到自己的项目上；<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo-theme-landscape&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.0.3&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li>
<li>删除 <code>node_modules</code> 和 <code>yarn.lock</code>；</li>
<li>清除缓存文件 ( <code>db.json</code> ) 和已生成的静态文件 ( <code>public</code> )<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo c</span><br></pre></td></tr></table></figure></li>
<li>重新安装依赖，并尝试在本地启动项目。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn install</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><br>结果：页面依然显示异常。<br><img src="/../assets/img/hexo03.png" alt="页面显示异常"></li>
</ol>
<h2 id="页面显示异常（一）"><a href="#页面显示异常（一）" class="headerlink" title="页面显示异常（一）"></a>页面显示异常（一）</h2><p>  以下操作是基于更新项目依赖方式二的基础上。</p>
<ol>
<li><p>安装依赖 <code>hexo-renderer-swig</code>；<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add hexo-renderer-swig</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>本地启动项目，页面显示正常；<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>部署，报错；<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 部署</span></span><br><span class="line">hexo g -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 报错信息</span></span><br><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>安装依赖 <code>hexo-deployer-git</code>；<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>再次部署，成功。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO  Deploy <span class="keyword">done</span>: git</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>一些说明<br>关于该解决方法，参考 <a href="https://github.com/iissnan/hexo-theme-next/issues/2253"><strong>iissnan&#x2F;hexo-theme-next&#x2F;issues&#x2F;2253</strong></a><br>项目部署报错的原因：缺少 <code>hexo-deployer-git</code> 插件</p>
</li>
</ol>
<h2 id="页面显示异常（二）"><a href="#页面显示异常（二）" class="headerlink" title="页面显示异常（二）"></a>页面显示异常（二）</h2><h3 id="操作过程-1"><a href="#操作过程-1" class="headerlink" title="操作过程"></a>操作过程</h3><ol>
<li>点击任意菜单项，比如归档（archives）；</li>
<li>页面出现 <code>Cannot GET /20%/</code> 信息，无法正常跳转到归档页面。</li>
</ol>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol>
<li>修改 <code>themes/next/_config.yml</code> 文件（Line 94 开始）<br>  将 <code>||</code> 前后的空格去掉。<br>  修改前：  <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span>  </span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br></pre></td></tr></table></figure>
  修改后：  <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/||home</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/||archive</span>  </span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/||tags</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/||user</span></span><br></pre></td></tr></table></figure></li>
<li>重新在本地启动项目，点击任意菜单项，页面显示正常；  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
<li>参考：<a href="https://github.com/hexojs/hexo/issues/3816">hexojs&#x2F;hexo&#x2F;issues&#x2F;3816</a></li>
</ol>
<h2 id="搜索功能异常"><a href="#搜索功能异常" class="headerlink" title="搜索功能异常"></a>搜索功能异常</h2><h3 id="操作过程-2"><a href="#操作过程-2" class="headerlink" title="操作过程"></a>操作过程</h3><p>点击搜索，无法正常使用搜索功能，控制台报错。<br>  <img src="/../assets/img/hexo04.png" alt="搜索功能异常"></p>
<h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><ol>
<li>安装依赖 <code>hexo-generator-searchdb</code>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add hexo-generator-searchdb</span><br></pre></td></tr></table></figure></li>
<li>清除缓存文件 ( <code>db.json</code> ) 和已生成的静态文件 ( <code>public</code> )  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo c</span><br></pre></td></tr></table></figure></li>
<li>重新在本地启动项目，点击搜索，搜索功能恢复正常。  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="翻页符号显示异常"><a href="#翻页符号显示异常" class="headerlink" title="翻页符号显示异常"></a>翻页符号显示异常</h2><ol>
<li>左、右翻页符号显示异常；<br>  <img src="/../assets/img/hexo05.png" alt="左、右翻页符号显示异常"></li>
<li>修改 <code>themes/next/layout/_partials/pagination.swig</code>，即<br>  <code>prev_text: &#39;&lt;i class=&quot;fa fa-angle-left&quot;&gt;&lt;/i&gt;&#39;,</code> 修改为 <code>prev_text: &#39;&lt;&#39;,</code><br>  <code>next_text: &#39;&lt;i class=&quot;fa fa-angle-right&quot;&gt;&lt;/i&gt;&#39;,</code> 修改为 <code>next_text: &#39;&gt;&#39;,</code>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">&lt;nav class=&quot;pagination&quot;&gt;</span><br><span class="line">  &#123;&#123;</span><br><span class="line">    paginator(&#123;</span><br><span class="line">      prev_text: &#x27;&lt;&#x27;,</span><br><span class="line">      next_text: &#x27;&gt;&#x27;,</span><br><span class="line">      mid_size: 1</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;&#125;</span><br><span class="line">&lt;/nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li>
<li>刷新页面，左、右翻页恢复正常显示。</li>
</ol>
<h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><ol>
<li>在文章页面，后续又发现了点击侧边栏的中文标题后，无法正确跳转到对应锚点的问题，而且控制台还报错；<br>搜索了相应的解决方案，需要修改源码。<br>尝试对源码进行修改后，该问题并没有得到解决。<br><img src="/../assets/img/hexo06.png" alt="点击侧边栏标题，控制台报错"></li>
<li>在对 Hexo 进行项目依赖更新后，很明显 NexT 主题也受到了一定影响，比如出现了页面显示异常或者交互异常的问题；</li>
<li>在修复与 NexT 主题相关的一些问题时，部分问题已经涉及到了修改源码的地步。<br>故最终考虑对 NexT 主题也进行相应的项目依赖更新操作。</li>
</ol>
]]></content>
      <tags>
        <tag>notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 更新的相关记录</title>
    <url>/2023/03/23/hexo003/</url>
    <content><![CDATA[<h2 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h2><p>在<a href="https://chendadou.github.io/2023/03/22/hexo002">《Hexo 更新依赖过程中出现的问题》</a>这篇文章中，对于 NexT 主题部分出现的问题：</p>
<ol>
<li>修复过程繁琐且问题接二连三地出现；</li>
<li>有些修复甚至要涉及到修改 NexT 主题的源码；</li>
</ol>
<p>综上，直接进行 NexT 主题版本的更新操作会比在旧版本基础之上进行多次修改的效果要好一点。</p>
<span id="more"></span>

<h2 id="关于版本"><a href="#关于版本" class="headerlink" title="关于版本"></a>关于版本</h2><h3 id="Hexo-相关"><a href="#Hexo-相关" class="headerlink" title="Hexo 相关"></a>Hexo 相关</h3><blockquote>
<p>由 v3.9.0 更新到 v6.3.0</p>
</blockquote>
<p>更新依赖前：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3.9.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.9.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-git&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-json-content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>更新依赖后：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.3.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-git&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-searchdb&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.4.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-swig&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-theme-landscape&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.0.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="NexT-主题相关"><a href="#NexT-主题相关" class="headerlink" title="NexT 主题相关"></a>NexT 主题相关</h3><p>  更新前：</p>
<blockquote>
<ol>
<li>版本号：v5.1.4</li>
<li>github：<a href="https://github.com/iissnan/hexo-theme-next">iissnan&#x2F;hexo-theme-next</a></li>
</ol>
</blockquote>
<p>  更新后：</p>
<blockquote>
<ol>
<li>版本号：v7.8.0</li>
<li>github：<a href="https://github.com/theme-next/hexo-theme-next">theme-next&#x2F;hexo-theme-next</a></li>
</ol>
</blockquote>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># node 版本</span></span><br><span class="line">node@18.14.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># npm 版本</span></span><br><span class="line">npm@9.5.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo-cli 版本</span></span><br><span class="line">hexo-cli@4.3.0</span><br></pre></td></tr></table></figure>

<h2 id="关于更新过程"><a href="#关于更新过程" class="headerlink" title="关于更新过程"></a>关于更新过程</h2><h3 id="Hexo-相关-1"><a href="#Hexo-相关-1" class="headerlink" title="Hexo 相关"></a>Hexo 相关</h3><p>参考 <a href="https://chendadou.github.io/2023/03/22/hexo002">《Hexo 更新依赖过程中出现的问题》</a></p>
<h3 id="NexT-主题相关-1"><a href="#NexT-主题相关-1" class="headerlink" title="NexT 主题相关"></a>NexT 主题相关</h3><p>参考下文提及的<strong>【NexT 主题】更新说明及常见问题</strong>。</p>
<h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><blockquote>
<ol>
<li><a href="https://github.com/iissnan/hexo-theme-next/issues/2252">【NexT 主题】仓库变动的说明</a>（<strong>看评论</strong>）</li>
<li><a href="https://github.com/next-theme/hexo-theme-next/issues/4">【NexT 主题】更新说明及常见问题</a>（<strong>必读</strong>）</li>
</ol>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>从零搭建 React + TS 项目（一）</title>
    <url>/2023/05/09/scaffolding001/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于 React18 + Webapck5 + TypeScript4 的自用脚手架搭建过程记录。</p>
<span id="more"></span>

<h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn init</span><br></pre></td></tr></table></figure>
<h3 id="初始目录结构"><a href="#初始目录结构" class="headerlink" title="初始目录结构"></a>初始目录结构</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">├── src                     // src开发目录</span><br><span class="line">│   ├── index.html          // 入口页面</span><br><span class="line">│   └── index.js            // 项目入口文件</span><br><span class="line">├── .babelrc                // babel配置</span><br><span class="line">├── .gitignore              // git忽略配置</span><br><span class="line">├── package.json            // 依赖包配置</span><br><span class="line">├── README.md               // 项目说明</span><br><span class="line">└── webpack.config.js       // webpack配置</span><br></pre></td></tr></table></figure>

<h2 id="webpack-相关"><a href="#webpack-相关" class="headerlink" title="webpack 相关"></a>webpack 相关</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add -D webpack webpack-cli webpack-dev-server</span><br></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> dir = path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  <span class="attr">entry</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/index.js&#x27;</span>),</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;[name].bundle.js&#x27;</span>,</span><br><span class="line">    <span class="comment">// publicPath: &quot;/&quot;,</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">port</span>: <span class="number">9988</span>,</span><br><span class="line">    <span class="attr">compress</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：先整个简单的开发模式，能跑起来和编译通过就行。</p>
</blockquote>
<h2 id="React-相关"><a href="#React-相关" class="headerlink" title="React 相关"></a>React 相关</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add -D react react-dom</span><br></pre></td></tr></table></figure>
<h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>About React<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>...<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDom</span> <span class="keyword">from</span> <span class="string">&#x27;react-dom&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDom</span>.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>, <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>));</span><br></pre></td></tr></table></figure>

<h2 id="配置HTML模板"><a href="#配置HTML模板" class="headerlink" title="配置HTML模板"></a>配置HTML模板</h2><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add -D html-webapck-plugin</span><br></pre></td></tr></table></figure>
<h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webapck-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ....</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">template</span>: <span class="string">`<span class="subst">$&#123;dir&#125;</span>/index.html`</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="配置-babel"><a href="#配置-babel" class="headerlink" title="配置 babel"></a>配置 babel</h2><h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add -D babel-loader @babel/core @babel/preset-env @babel/preset-react @babel/plugin-transform-runtime @babel/plugin-proposal-class-properties</span><br></pre></td></tr></table></figure>
<h3 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.m?(js|jsx)$/</span>,</span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">        <span class="attr">use</span>: &#123;</span><br><span class="line">          <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// .babelrc</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;presets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;@babel/preset-env&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;@babel/preset-react&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;plugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;@babel/plugin-transform-runtime&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;@babel/plugin-proposal-class-properties&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="npm-scripts"><a href="#npm-scripts" class="headerlink" title="npm scripts"></a>npm scripts</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mode=development webpack serve --color --progress&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>react</tag>
        <tag>typescript</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>从零搭建 React + TS 项目（二）</title>
    <url>/2023/05/10/scaffolding002/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于 React18 + Webapck5 + TypeScript4 的自用脚手架搭建过程记录。</p>
<span id="more"></span>

<h2 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h2><h3 id="目录结构更新"><a href="#目录结构更新" class="headerlink" title="目录结构更新"></a>目录结构更新</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">├── src                     // src开发目录</span><br><span class="line">│   ├── assets              // 静态资源</span><br><span class="line">│   │   ├── images</span><br><span class="line">│   │   │   └── icon01.png</span><br><span class="line">│   ├── styles              // 样式文件（测试loader是否生效）</span><br><span class="line">│   │   ├── style.css</span><br><span class="line">│   │   ├── style.less</span><br><span class="line">│   │   └── style.scss</span><br><span class="line">│   ├── index.html          // 入口页面</span><br><span class="line">│   └── index.js            // 项目入口文件（更新，测试loader是否生效）</span><br><span class="line">├── .babelrc                // babel配置</span><br><span class="line">├── .gitignore              // git忽略配置</span><br><span class="line">├── package.json            // 依赖包配置（更新）</span><br><span class="line">├── README.md               // 项目说明</span><br><span class="line">└── webpack.config.js       // webpack配置（更新，处理样式的loader）</span><br></pre></td></tr></table></figure>

<h2 id="配置处理样式的loader"><a href="#配置处理样式的loader" class="headerlink" title="配置处理样式的loader"></a>配置处理样式的loader</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add -D style-loader css-loader less less-loader postcss postcss-loader sass sass-loader mini-css-extract-plugin</span><br></pre></td></tr></table></figure>

<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> isDevMode = process.<span class="property">env</span>.<span class="property">mode</span> == <span class="string">&#x27;development&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      <span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">        <span class="attr">use</span>: [</span><br><span class="line">          isDevMode ? <span class="string">&#x27;style-loader&#x27;</span> : <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;postcss-loader&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.less$/i</span>,</span><br><span class="line">        <span class="attr">use</span>: [</span><br><span class="line">          <span class="comment">// compiles Less to CSS</span></span><br><span class="line">          isDevMode ? <span class="string">&#x27;style-loader&#x27;</span> : <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;less-loader&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.s[ac]ss$/i</span>,</span><br><span class="line">        <span class="attr">use</span>: [</span><br><span class="line">          <span class="comment">// 将 JS 字符串生成为 style 节点</span></span><br><span class="line">          isDevMode ? <span class="string">&#x27;style-loader&#x27;</span> : <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">          <span class="comment">// 将 CSS 转化成 CommonJS 模块</span></span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="comment">// 将 Sass 编译成 CSS</span></span><br><span class="line">          <span class="string">&#x27;sass-loader&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&quot;[name].[contenthash].css&quot;</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：一些具体的配置参数后续再加，先简单增加相应的loader。</p>
</blockquote>
<h2 id="配置资源模块"><a href="#配置资源模块" class="headerlink" title="配置资源模块"></a>配置资源模块</h2><blockquote>
<p>相关链接：<a href="https://webpack.docschina.org/guides/asset-modules/">Webpack 5 资源模块</a></p>
</blockquote>
<h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(jpg|jpeg|png|gif|bmp|svg|woff|woff2|otf|ttf)$/i</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="测试文件准备"><a href="#测试文件准备" class="headerlink" title="测试文件准备"></a>测试文件准备</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDom</span> <span class="keyword">from</span> <span class="string">&#x27;react-dom&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入样式</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/style.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/style.less&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/style.scss&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入图片</span></span><br><span class="line"><span class="keyword">import</span> imgSrc <span class="keyword">from</span> <span class="string">&#x27;./assets/images/icon01.png&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;test&#x27;</span> <span class="attr">className</span>=<span class="string">&#x27;less-test&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;font-40&#x27;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;imgSrc&#125;</span> <span class="attr">className</span>=<span class="string">&#x27;img&#x27;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDom</span>.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>, <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>));</span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* style.css */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#test</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">50px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* style.less */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.less-test</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.font-40</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* style.scss */</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$body-color</span>: chocolate;</span><br><span class="line"></span><br><span class="line"><span class="variable">$img-width</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="variable">$img-height</span>: <span class="number">100px</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$body-color</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$img-width</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">$img-height</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>react</tag>
        <tag>typescript</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>从零搭建 React + TS 项目（三）</title>
    <url>/2023/05/15/scaffolding003/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于 React18 + Webapck5 + TypeScript4 的自用脚手架搭建过程记录。</p>
<span id="more"></span>

<h2 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h2><h3 id="目录结构更新"><a href="#目录结构更新" class="headerlink" title="目录结构更新"></a>目录结构更新</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">├── src                     // src开发目录</span><br><span class="line">│   ├── assets              // 静态资源</span><br><span class="line">│   │   ├── images</span><br><span class="line">│   │   │   └── icon01.png</span><br><span class="line">│   ├── pages               // 页面文件（新增，测试loader是否生效）</span><br><span class="line">│   │   ├── pages01</span><br><span class="line">│   │   │   └── index.tsx</span><br><span class="line">│   ├── styles              // 样式文件</span><br><span class="line">│   │   ├── style.css</span><br><span class="line">│   │   ├── style.less</span><br><span class="line">│   │   └── style.scss</span><br><span class="line">│   ├── index.html          // 入口页面</span><br><span class="line">│   └── index.tsx           // 项目入口文件（更新，测试loader是否生效）</span><br><span class="line">├── .gitignore              // git忽略配置</span><br><span class="line">├── assets.d.ts             // ts声明文件（新增，资源相关）</span><br><span class="line">├── package.json            // 依赖包配置（更新）</span><br><span class="line">├── README.md               // 项目说明</span><br><span class="line">├── tsconfig.json           // ts配置（新增）</span><br><span class="line">└── webpack.config.ts       // webpack配置（更新，解析ts）</span><br></pre></td></tr></table></figure>

<h2 id="配置解析ts相关的loader"><a href="#配置解析ts相关的loader" class="headerlink" title="配置解析ts相关的loader"></a>配置解析ts相关的loader</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add -D typescript ts-node</span><br></pre></td></tr></table></figure>

<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul>
<li>移除 <code>.babelrc</code> 文件，将文件内的代码复制到 <code>webpack.config.js</code> 文件的 <code>babel-loader</code> 下的 <code>options</code>。</li>
<li>将 <code>webapck.config.js</code> 修改为 <code>webpack.config.ts</code>，将 <code>src</code> 目录下的 <code>index.js</code> 修改为 <code>index.tsx</code>。</li>
<li>ts 配置初始化：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx typescript --init</span><br></pre></td></tr></table></figure></li>
</ul>
<p>配置如下：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.config.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HtmlWebpackPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;html-webpack-plugin&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MiniCssExtractPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;mini-css-extract-plugin&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> dir = path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isDevMode = process.<span class="property">env</span>.<span class="property">mode</span> === <span class="string">&#x27;development&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      <span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.m?(tsx|ts)$/</span>,</span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="attr">use</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">            <span class="attr">options</span>: &#123;</span><br><span class="line">              <span class="attr">babelrc</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">presets</span>: [</span><br><span class="line">                [<span class="string">&#x27;@babel/preset-env&#x27;</span>],</span><br><span class="line">                [<span class="string">&#x27;@babel/preset-react&#x27;</span>],</span><br><span class="line">                [<span class="string">&#x27;@babel/preset-typescript&#x27;</span>],</span><br><span class="line">              ],</span><br><span class="line">              <span class="attr">plugins</span>: [</span><br><span class="line">                [<span class="string">&#x27;@babel/plugin-transform-runtime&#x27;</span>],</span><br><span class="line">                [</span><br><span class="line">                  <span class="string">&#x27;@babel/plugin-proposal-class-properties&#x27;</span>,</span><br><span class="line">                  &#123; <span class="attr">loose</span>: <span class="literal">true</span> &#125;</span><br><span class="line">                ],</span><br><span class="line">              ]</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">extensions</span>: [<span class="string">&#x27;.tsx&#x27;</span>, <span class="string">&#x27;.ts&#x27;</span>, <span class="string">&#x27;.jsx&#x27;</span>, <span class="string">&#x27;.js&#x27;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// assets.d.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&#x27;*.svg&#x27;</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&#x27;*.png&#x27;</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&#x27;*.jpg&#x27;</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&#x27;*.jpeg&#x27;</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&#x27;*.gif&#x27;</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&#x27;*.bmp&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// tsconfig.json</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">/* Visit https://aka.ms/tsconfig to read more about this file */</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">/* Language and Environment */</span></span><br><span class="line">   <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;es5&quot;</span><span class="punctuation">,</span>                              <span class="comment">/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */</span></span><br><span class="line">    <span class="attr">&quot;jsx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react&quot;</span><span class="punctuation">,</span>                              <span class="comment">/* Specify what JSX code is generated. */</span></span><br><span class="line">    <span class="attr">&quot;experimentalDecorators&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>              <span class="comment">/* Enable experimental support for TC39 stage 2 draft decorators. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Modules */</span></span><br><span class="line">    <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;commonjs&quot;</span><span class="punctuation">,</span>                        <span class="comment">/* Specify what module code is generated. */</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./&quot;</span><span class="punctuation">,</span>                             <span class="comment">/* Specify the base directory to resolve non-relative module names. */</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;./src/*&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span>                                            <span class="comment">/* Specify a set of entries that re-map imports to additional lookup locations. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Emit */</span></span><br><span class="line">    <span class="attr">&quot;sourceMap&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>                            <span class="comment">/* Create source map files for emitted JavaScript files. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Interop Constraints */</span></span><br><span class="line">    <span class="attr">&quot;esModuleInterop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>                      <span class="comment">/* Emit additional JavaScript to ease support for importing CommonJS modules. This enables &#x27;allowSyntheticDefaultImports&#x27; for type compatibility. */</span></span><br><span class="line">    <span class="attr">&quot;forceConsistentCasingInFileNames&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>     <span class="comment">/* Ensure that casing is correct in imports. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Type Checking */</span></span><br><span class="line">    <span class="attr">&quot;strict&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>                               <span class="comment">/* Enable all strict type-checking options. */</span></span><br><span class="line">    <span class="attr">&quot;skipLibCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                          <span class="comment">/* Skip type checking all .d.ts files. */</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src&quot;</span><span class="punctuation">,</span> <span class="string">&quot;./assets.d.ts&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./src/index.tsx&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mode=development webpack serve --color --progress&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="测试文件准备"><a href="#测试文件准备" class="headerlink" title="测试文件准备"></a>测试文件准备</h2><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/index.tsx</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Page01</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/page01/index&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; createRoot &#125; <span class="keyword">from</span> <span class="string">&#x27;react-dom/client&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> root = <span class="title function_">createRoot</span>(container!);    <span class="comment">// createRoot(container!) if you use TypeScript</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/style.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/style.less&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/style.scss&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> imgSrc <span class="keyword">from</span> <span class="string">&#x27;./assets/images/icon01.png&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">App</span>: <span class="title class_">React</span>.<span class="property">FC</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">title</span>: <span class="built_in">string</span> = <span class="string">&#x27;Hello World&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;test&#x27;</span> <span class="attr">className</span>=<span class="string">&#x27;less-test&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;font-40&#x27;</span>&gt;</span>&#123;title&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;imgSrc&#125;</span> <span class="attr">className</span>=<span class="string">&#x27;img&#x27;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Page01</span> <span class="attr">msg</span>=<span class="string">&quot;yeah&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">root.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/pages/page01/index.tsx</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Props</span> &#123;</span><br><span class="line">  <span class="attr">msg</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">Page01</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span>&lt;<span class="built_in">any</span>&gt;&#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props: Props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; msg &#125; = <span class="variable language_">this</span>.<span class="property">props</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>page01 test, &quot;&#123;msg || &#x27;-&#x27;&#125;&quot; from props<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>react</tag>
        <tag>typescript</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>从零搭建 React + TS 项目（四）</title>
    <url>/2023/05/18/scaffolding004/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于 React18 + Webapck5 + TypeScript4 的自用脚手架搭建过程记录。</p>
<span id="more"></span>

<h2 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h2><h3 id="目录结构更新"><a href="#目录结构更新" class="headerlink" title="目录结构更新"></a>目录结构更新</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">├── README.md                 // 项目说明</span><br><span class="line">├── .gitignore                // git忽略配置</span><br><span class="line">├── assets.d.ts               // ts声明文件（资源相关）</span><br><span class="line">├── package.json              // 依赖包配置</span><br><span class="line">├── public                    // 静态资源</span><br><span class="line">│   ├── favicon.ico</span><br><span class="line">│   └── index.html            // html模板</span><br><span class="line">├── src                       // 开发目录</span><br><span class="line">│   ├── assets                // 静态资源</span><br><span class="line">│   │   └── images</span><br><span class="line">│   │       ├── icon01.png</span><br><span class="line">│   │       └── icon02.png</span><br><span class="line">│   ├── index.tsx             // 项目入口文件</span><br><span class="line">│   ├── pages                 // 页面文件</span><br><span class="line">│   │   └── page01</span><br><span class="line">│   │       └── index.tsx</span><br><span class="line">│   └── styles                // 样式文件</span><br><span class="line">│       ├── style.css</span><br><span class="line">│       ├── style.less</span><br><span class="line">│       └── style.scss</span><br><span class="line">├── tsconfig.json             // ts配置</span><br><span class="line">└── webpack                   // webpack配置</span><br><span class="line">    ├── webpack.analysis.ts</span><br><span class="line">    ├── webpack.common.ts     </span><br><span class="line">    ├── webpack.dev.ts</span><br><span class="line">    └── webpack.prod.ts</span><br></pre></td></tr></table></figure>

<h2 id="资源模块配置更新"><a href="#资源模块配置更新" class="headerlink" title="资源模块配置更新"></a>资源模块配置更新</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.common.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> webpack <span class="keyword">from</span> <span class="string">&#x27;webpack&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">commonConfig</span>: webpack.<span class="property">Configuration</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 处理图片文件</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(jpg|jpeg|png|gif|bmp|svg)$/i</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="attr">parser</span>: &#123;</span><br><span class="line">          <span class="attr">dataUrlCondition</span>: &#123;</span><br><span class="line">            <span class="attr">maxSize</span>: <span class="number">10</span> * <span class="number">1024</span>,   <span class="comment">// 这边设置为小于10kb转base64位，默认是小于8kb</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">generator</span>: &#123;</span><br><span class="line">          <span class="attr">filename</span>: <span class="string">&#x27;static/images/[name][ext]&#x27;</span>, <span class="comment">// 文件输出目录和命名</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 处理字体</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(woff2?|otf|ttf|eot)$/i</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="attr">parser</span>: &#123;</span><br><span class="line">          <span class="attr">dataUrlCondition</span>: &#123;</span><br><span class="line">            <span class="attr">maxSize</span>: <span class="number">10</span> * <span class="number">1024</span>,   <span class="comment">// 小于10kb转base64位，默认是小于8kb</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">generator</span>: &#123;</span><br><span class="line">          <span class="attr">filename</span>: <span class="string">&#x27;static/fonts/[name][ext]&#x27;</span>, <span class="comment">// 文件输出目录和命名</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 处理媒体</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(mp4|webm|ogg|mp3|wav|flac|aac)$/i</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="attr">parser</span>: &#123;</span><br><span class="line">          <span class="attr">dataUrlCondition</span>: &#123;</span><br><span class="line">            <span class="attr">maxSize</span>: <span class="number">10</span> * <span class="number">1024</span>,   <span class="comment">// 小于10kb转base64位，默认是小于8kb</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">generator</span>: &#123;</span><br><span class="line">          <span class="attr">filename</span>: <span class="string">&#x27;static/media/[name][ext]&#x27;</span>, <span class="comment">// 文件输出目录和命名</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> commonConfig;</span><br></pre></td></tr></table></figure>

<h2 id="复制-public-文件夹"><a href="#复制-public-文件夹" class="headerlink" title="复制 public 文件夹"></a>复制 public 文件夹</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add -D copy-webpack-plugin</span><br></pre></td></tr></table></figure>

<h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.prod.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> webpack <span class="keyword">from</span> <span class="string">&#x27;webpack&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; merge &#125; <span class="keyword">from</span> <span class="string">&#x27;webpack-merge&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> commonConfig <span class="keyword">from</span> <span class="string">&#x27;./webpack.common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CopyWebpackPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;copy-webpack-plugin&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">prodConfig</span>: webpack.<span class="property">Configuration</span> = <span class="title function_">merge</span>(commonConfig, &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">CopyWebpackPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">patterns</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">// 将 public 文件夹下的文件复制到 dist 文件夹中，忽略 index.html 文件</span></span><br><span class="line">          <span class="attr">from</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../public&#x27;</span>),</span><br><span class="line">          <span class="attr">to</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line">          <span class="attr">filter</span>: <span class="function"><span class="params">source</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> !source.<span class="title function_">includes</span>(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="alias-别名配置"><a href="#alias-别名配置" class="headerlink" title="alias 别名配置"></a>alias 别名配置</h2><h3 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.common.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> webpack <span class="keyword">from</span> <span class="string">&#x27;webpack&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">commonConfig</span>: webpack.<span class="property">Configuration</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src&#x27;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试文件准备"><a href="#测试文件准备" class="headerlink" title="测试文件准备"></a>测试文件准备</h3><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/pages/page01/index.tsx</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> imgSrc <span class="keyword">from</span> <span class="string">&#x27;@/assets/images/icon01.png&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> imgSrc2 <span class="keyword">from</span> <span class="string">&#x27;@/assets/images/icon02.png&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/styles/style.less&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Page01</span>: <span class="title class_">React</span>.<span class="property">FC</span> = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;img-box&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;imgSrc&#125;</span> <span class="attr">className</span>=<span class="string">&#x27;img-item&#x27;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;imgSrc2&#125;</span> <span class="attr">className</span>=<span class="string">&#x27;img-item&#x27;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/index.tsx</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Page01</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/page01/index&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; createRoot &#125; <span class="keyword">from</span> <span class="string">&#x27;react-dom/client&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> root = <span class="title function_">createRoot</span>(container!);    <span class="comment">// createRoot(container!) if you use TypeScript</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/styles/style.scss&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">App</span>: <span class="title class_">React</span>.<span class="property">FC</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;main&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Page01</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">root.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>);</span><br></pre></td></tr></table></figure>

<h2 id="webpack包分析工具"><a href="#webpack包分析工具" class="headerlink" title="webpack包分析工具"></a>webpack包分析工具</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add -D webpack-bundle-analyzer</span><br></pre></td></tr></table></figure>

<h3 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.analysis.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> webpack <span class="keyword">from</span> <span class="string">&#x27;webpack&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; merge &#125; <span class="keyword">from</span> <span class="string">&#x27;webpack-merge&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BundleAnalyzerPlugin</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;webpack-bundle-analyzer&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> prodConfig <span class="keyword">from</span> <span class="string">&#x27;./webpack.prod&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">analysisConfig</span>: webpack.<span class="property">Configuration</span> = <span class="title function_">merge</span>(prodConfig, &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">BundleAnalyzerPlugin</span>(),</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> analysisConfig;</span><br></pre></td></tr></table></figure>

<h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><h3 id="scripts-更新"><a href="#scripts-更新" class="headerlink" title="scripts 更新"></a>scripts 更新</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env NODE_ENV=development webpack serve --color --progress --config ./webpack/webpack.dev.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env NODE_ENV=production webpack --color --progress --config ./webpack/webpack.prod.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;analysis&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env webpack --color --progress --config ./webpack/webpack.analysis.ts&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>开发模式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure>
<p>生产模式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn build</span><br></pre></td></tr></table></figure>
<p>打包体积分析</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn analysis</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>react</tag>
        <tag>typescript</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
</search>
